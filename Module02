============================================================= IfElseDemo ====================================================
---------- IfElseDemo.html -----------------------
<template>
    <lightning-card>
        <div class="slds-m-around_small">
            <lightning-layout horizontal-align="center">
                <lightning-layout-item>
                        <template if:true={isTom}>
                            <div class="slds-m-around_small">
                                <img src={tomImage}></img>
                            </div>
                        </template>
                        <template if:false={isTom}>
                            <div class="slds-m-around_small">
                                <img src={jerryImage}></img>
                            </div>
                        </template>
                </lightning-layout-item>
                <lightning-layout-item>
                    <div class="slds-m-around_small height_full">
                        <lightning-layout vertical-align="center" class="height_full">
                            <lightning-layout-item>
                                <lightning-button variant="brand" label={buttonLabel} title={buttonLabel} onclick={toggleImage}> </lightning-button>
                            </lightning-layout-item>
                        </lightning-layout>
                    </div>
                </lightning-layout-item>
            </lightning-layout>
        </div>
    </lightning-card>  
</template>

---------- IfElseDemo.js -----------------------
import { LightningElement } from 'lwc';
import lwcBootCamp from '@salesforce/resourceUrl/LWCBootCamp';

export default class IfElseDemo extends LightningElement {
    isTom = true;
    buttonLabel = 'Show Jerry';
    tomImage = lwcBootCamp + '/images/Tom_Cat.png';
    jerryImage = lwcBootCamp + '/images/Jerry_Mouse.png';
   
    toggleImage(event) {
        this.isTom = !this.isTom;
        this.buttonLabel =  this.isTom ? 'Show Jerry' : 'Show Tom';
    }

}
---------- IfElseDemo.css -----------------------
.height_full {

    height: 100% !important;
}

============================================================= iteratorDemo ====================================================
--------------------------------------  iteratorDemo.html ---------------------------
<template>
    <lightning-card title="For:Each Demo" icon-name="standard:contact">
        <table class="slds-table slds-table_cell-buffer slds-table_bordered">
            <thead>
              <tr class="slds-line-height_reset">
                <th class="" scope="col">
                  <div class="slds-truncate" title="Index">Index</div>
                </th>
                <th class="" scope="col">
                  <div class="slds-truncate" title="Id">Id</div>
                </th>
                <th class="" scope="col">
                  <div class="slds-truncate" title="Name">Name</div>
                </th>
                <th class="" scope="col">
                    <div class="slds-truncate" title="Email">Email</div>
                  </th>
                </tr>
            </thead>
            <tbody>
            <template if:true={contacts.length} for:each={contacts} for:item="con" for:index="index">
                <tr class="slds-hint-parent" key={con.Id}>
                    <th data-label="Index" scope="row">
                        <div class="slds-truncate">{index}</div>
                      </th>
                    <td data-label="Id">
                        <div class="slds-truncate">{con.Id}</div>
                    </td>
                    <td data-label="Name">
                        <div class="slds-truncate">{con.Name}</div>
                    </td>
                    <td data-label="Email">
                        <div class="slds-truncate">{con.Email}</div>
                    </td>
                </tr>
            </template>
            </tbody>
        </table>
    </lightning-card>
    <div class="slds-m-top_medium slds-size_12-of-12"></div>
    <lightning-card title="Iterator Demo" icon-name="standard:contact">
        <ul class="slds-m-around_medium">
            <template iterator:it={contacts}>
                <li key={it.value.Id}>
                    <div if:true={it.first} class="list-first"></div>
                    <div class="slds-m-top_small slds-m-bottom_small">
                    {it.value.Name} - {it.value.Email}
                    </div>
                    <div if:true={it.last} class="list-last"></div>
                </li>
            </template>
        </ul>
    </lightning-card>
</template>
--------------------------------------  iteratorDemo.js ---------------------------
import { LightningElement } from 'lwc';

export default class IteratorDemo extends LightningElement {

    contacts = [
        {
            Id: 'C1',
            Name: 'John Abraham',
            Email: 'ja@gmail.com',
        },
        {
            Id: 'C2',
            Name: 'Brad Pitt',
            Email: 'bpitt@gmail.com',
        },
        {
            Id: 'C3',
            Name: 'Angelina Jolie',
            Email: 'angelj@gmail.com',
        },
        {
            Id: 'C4',
            Name: 'Peter Parker',
            Email: 'spiderman@marvelcomics.com',
        }
    ];
}
--------------------------------------  iteratorDemo.css ----------------------------
.list-first {
    border-top: 2px solid rgb(80, 79, 79);
}

.list-last {
    border-bottom: 2px solid rgb(80, 79, 79);

}
